{
	"info": {
		"_postman_id": "585ba08a-bb52-40b6-a25c-249f8460ded3",
		"name": "microservice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12400630"
	},
	"item": [
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let users = pm.collectionVariables.get('users') ?? [];\r",
							"if (!Array.isArray(users)) users = [];\r",
							"users.push(pm.response.json()._id);\r",
							"pm.collectionVariables.set('users', users, Array)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/user",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "list",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/user",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "get by id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let users = pm.collectionVariables.get('users') ?? [];\r",
							"if (!Array.isArray(users)) users = [];\r",
							"\r",
							"const selectedUser = users[Math.floor(Math.random()*users.length)];\r",
							"\r",
							"\r",
							"pm.request.url.variables.idx(0).value = selectedUser;"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/user/:id",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"user",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{$selectedUser}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let users = pm.collectionVariables.get('users') ?? [];\r",
							"if (!Array.isArray(users)) users = [];\r",
							"\r",
							"const selectedUser = users[Math.floor(Math.random()*users.length)];\r",
							"\r",
							"\r",
							"pm.request.url.variables.idx(0).value = selectedUser;"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/user/:id",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"user",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "67e2d113d056cb79432f540d"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let users = pm.collectionVariables.get('users') ?? [];\r",
							"if (!Array.isArray(users)) users = [];\r",
							"\r",
							"const selectedUser = users[Math.floor(Math.random()*users.length)];\r",
							"pm.request.url.variables.idx(0).value = selectedUser;\r",
							"\r",
							"\r",
							"let deleted = pm.collectionVariables.get('deletedUsers') ?? [];\r",
							"if (!Array.isArray(deleted)) deleted = [];\r",
							"deleted.push(selectedUser);\r",
							"pm.collectionVariables.set('deletedUsers', deleted, Array)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let users = pm.collectionVariables.get('users') ?? [];\r",
							"let deleted = pm.collectionVariables.get('deletedUsers') ?? [];\r",
							"if (!Array.isArray(users)) users = [];\r",
							"if (!Array.isArray(deleted)) deleted = [];\r",
							"\r",
							"const newUsers = users.filter((user) => !deleted.includes(user));\r",
							"\r",
							"pm.collectionVariables.set('users', newUsers, Array)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/user/:id",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"user",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "67e2d113d056cb79432f540d"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "http://arch.homework",
			"type": "string"
		},
		{
			"key": "users",
			"value": ""
		},
		{
			"key": "deletedUsers",
			"value": ""
		}
	]
}